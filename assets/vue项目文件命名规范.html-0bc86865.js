import{_ as a,p as e,q as s,a1 as r}from"./framework-5866ffd3.js";const p={},h=r('<h2 id="vue项目文件和文件夹命名规范" tabindex="-1"><a class="header-anchor" href="#vue项目文件和文件夹命名规范" aria-hidden="true">#</a> VUE项目文件和文件夹命名规范</h2><p><strong>常见命名规范：</strong></p><p><strong>camelCase</strong> （小驼峰式命名法–首字母小写）</p><p><strong>PascalCase</strong> （大驼峰式命名法–首字母大写）</p><p><strong>kebab-case</strong>（短横线连接式）</p><p><strong>Snake</strong>（下划线连接式）</p><h3 id="项目文件夹命名" tabindex="-1"><a class="header-anchor" href="#项目文件夹命名" aria-hidden="true">#</a> 项目文件夹命名</h3><p>kebab-case 规范。即项目名全部采用小写以短横线分隔方式命名。（可以参考node_modules中的项目依赖，都是kebab-case 规范）</p><h3 id="项目内文件夹命名" tabindex="-1"><a class="header-anchor" href="#项目内文件夹命名" aria-hidden="true">#</a> 项目内文件夹命名</h3><p>文件夹统一使用kebab-case的风格。</p><h3 id="图像文件名" tabindex="-1"><a class="header-anchor" href="#图像文件名" aria-hidden="true">#</a> 图像文件名</h3><p>Snake规范。 全部采用小写方式， 优先选择单个单词命名，多个单词命名以下划线分隔。</p><h3 id="html-css-命名" tabindex="-1"><a class="header-anchor" href="#html-css-命名" aria-hidden="true">#</a> HTML/CSS 命名</h3><p>Snake规范。 全部采用小写方式， 优先选择单个单词命名，多个单词命名以下划线分隔。</p><h3 id="js命名" tabindex="-1"><a class="header-anchor" href="#js命名" aria-hidden="true">#</a> JS命名</h3><p>表示类的.js文件，使用 PascalCase 风格。</p><p>其他类型的.js文件，使用 kebab-case 风格。</p><h3 id="vue组件文件命名" tabindex="-1"><a class="header-anchor" href="#vue组件文件命名" aria-hidden="true">#</a> vue组件文件命名</h3><p>单文件组件统一用 kebab-case 风格。</p><p>单例组件以 The 前缀命名，以示其唯一性。（即每个页面只使用一次，不接受任何 prop的组件）</p><p>基础组件应该全部以一个特定的前缀开头，如 Base，App等。（即用于展示的、无逻辑的或无状态的组件）</p><p>业务组件应该以特定的 Custom 前缀命名。（即在业务中被多个页面复用，有相对的逻辑并且功能单一完善的组件）</p><p>与父组件紧密耦合的组件应该以父组件名作为前缀命名。</p><h3 id="组件内代码参数命名" tabindex="-1"><a class="header-anchor" href="#组件内代码参数命名" aria-hidden="true">#</a> 组件内代码参数命名</h3><p>**name：**在文件内部对组件命名，应该始终是多个单词，且是 PascalCase 。（根组件 App 以及 Vue 内置组件除外）</p><p>**prop：**应该始终使用 camelCase，而在模板和 JSX 中应该始终使用 kebab-case。</p><p>**router：**Vue Router Path 命名采用 kebab-case 格式。</p><p>**模板中组件名：**在单文件组件和字符串模板中组件名应该总是 PascalCase，自闭合状态。在 DOM 模板中总是 kebab-case 双闭合状态。</p><p>**变量：**使用 camelCase，描述用途。</p><p><strong>常量</strong>： 全部大写下划线分割。</p><p>**方法：**使用 camelCase，描述功能。</p><p>**自定义事件：**自定义事件应始终使用 kebab-case 的事件名。</p><p>**事件方法：**使用 camelCase，建议在前面加上 handle 单词。</p>',33),n=[h];function t(c,d){return e(),s("div",null,n)}const i=a(p,[["render",t],["__file","vue项目文件命名规范.html.vue"]]);export{i as default};
